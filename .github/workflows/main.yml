name: Slack Notify of CI Run

on:
  workflow_dispatch:
    inputs:
      channel_id:
        description: 'Channel to send message to'
        required: true
        type: string
      message:
        description: 'Message to post'
        required: true
        type: string



jobs:
  
  check-control : 
    runs-on : ubuntu-latest
    outputs:
      enabled: ${{ steps.set_output.outputs.enabled }}
    steps :
      - name : Checkout Code
        uses : actions/checkout@v3
      - name: Read the control mode
        run: |
          CI_SYSTEM=$(grep 'ci:' .ci_control.yml | awk '{print $2}')
          echo "Raw CI_SYSTEM value: '$CI_SYSTEM'"
          if [ "$CI_SYSTEM" == "github" ]; then 
            echo "CI in use is $CI_SYSTEM"
            echo "enabled=true" >> $GITHUB_ENV
          else
            echo "CI not supported: $CI_SYSTEM"
            echo "enabled=false" >> $GITHUB_ENV
          fi
      - name: Send slack message
        if : env.enabled == 'false'
        uses: slackapi/slack-github-action@v2.1.1
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: >-
            {
              "channel": "${{ inputs.channel_id }}",
              "text": "ğŸš« *GitHub Actions notice*: 'run-tests' was skipped. Reason: 'ci_control.yml' does not contain 'github'."
            }
      - name : Set output
        id: set_output
        run: echo "enabled=${{ env.enabled }}" >> $GITHUB_OUTPUT
                  
  slack-notify:
    needs : check-control
    runs-on: ubuntu-latest
    if : needs.check-control.outputs.enabled == 'true'
    steps:
      - name: Send slack message
        uses: slackapi/slack-github-action@v2.1.1
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: >-
            {
              "channel": "${{ inputs.channel_id }}",
              "text": "${{ inputs.message }} | ${{ needs.check-control.outputs.enabled }}"
            }
